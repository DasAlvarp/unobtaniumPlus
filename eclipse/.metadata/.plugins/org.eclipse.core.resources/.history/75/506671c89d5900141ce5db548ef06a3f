package com.dasalvarp.unobtaniumplus.handler;

import java.io.File;

import com.dasalvarp.unobtaniumplus.reference.Reference;

import cpw.mods.fml.client.event.ConfigChangedEvent;
import cpw.mods.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.common.config.Configuration;

public class ConfigurationHandler {
	
	
	public static Configuration config;
	public static void init(File configFile)
	{
		
		
		boolean explicitMode = false;
		//creates config object.
		config = new Configuration(configFile);
		
		try
		{
			//load config file
			config.load();
			explicitMode = config.get("ExplicitMode", "explicitMode", false, "examle config value").getBoolean(true);//loads in value from config file, loads configValue, default value is true. If I can't get it, it returns troue. If there's an exception, it goes to catch statement.		
		}
		catch(Exception e)
		{
			//bad code. Should log it someday.

		}
		finally
		{
		
			//save config file. This will always happen.
			if(config.hasChanged())
			{
				config.save();
			}
		}
		System.out.println("Config Test: " + explicitMode);
	}
	
	
	@SubscribeEvent
	public void onConfigurationChangedEvent(ConfigChangedEvent.OnConfigChangedEvent event)
	{
		if(event.modID.equalsIgnoreCase(Reference.MODID))
		{
			//resync configs
		}
	}

}
